name: CI

on:
  workflow_call:
    inputs:
      node-version:
        description: "Version Spec of the version to use. Examples: 12.x, 10.15.1, >=10.15.0"
        default: 12
        required: false
        type: string

      package-manager:
        description: "Used to specify a package manager for caching in the default directory. Supported values: npm, yarn, pnpm"
        default: npm
        required: false
        type: string

jobs:
  lint-tests:
    name: Lint and tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          cache: ${{ inputs.package-manager }}
          node-version: ${{ inputs.node-version }}

      # https://github.com/lirantal/lockfile-lint
      - name: Lint lockfile
        run: |
          if [ "${{ inputs.package-manager }}" = "npm" ]; then
            npm_config_yes=true npx lockfile-lint \
            --path package-lock.json \
            --allowed-hosts npm yarn \
            --validate-https
          elif [ "${{ inputs.package-manager }}" = "yarn" ]; then
            npm_config_yes=true npx lockfile-lint \
            --path yarn.lock \
            --allowed-hosts npm yarn \
            --validate-https
          else
            echo "Unsupported package manager: ${{ inputs.package-manager }}"
            exit 1
          fi

      - name: Install Dependencies
        run: |
          if [ "${{ inputs.package-manager }}" = "npm" ]; then
            npm ci
          elif [ "${{ inputs.package-manager }}" = "yarn" ]; then
            yarn install --frozen-lockfile
          elif [ "${{ inputs.package-manager }}" = "pnpm" ]; then
            pnpm install --frozen-lockfile
          else
            echo "Unsupported package manager: ${{ inputs.package-manager }}"
            exit 1
          fi

      - name: Run Lint
        run: ${{ inputs.package-manager }} run lint

      - name: Run Tests
        run: ${{ inputs.package-manager }} run test
